{"version":3,"sources":["image/logo.png","components/Pesquisa/index.jsx","components/Nav/index.jsx","components/Footer/index.jsx","components/SideBar/index.jsx","components/Card/index.jsx","views/Home/index.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pesquisa","filterData","useState","pesquisa","setPesquisa","className","type","value","onChange","event","target","placeholder","onClick","Nav","src","Logo","to","Footer","href","size","color","Sidebar","props","data","map","destino","titulo","Card","id","imagem","alt","descricao","autor","Home","posts","setPosts","filter","filteredData","post","toLowerCase","includes","length","prop","key","Routes","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.07052acf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e4ef4d58.png\";","import React, { useState } from \"react\";\nimport \"./Pesquisa.css\";\n\nconst Pesquisa = ({ filterData }) => {\n  const [pesquisa, setPesquisa] = useState(\"\");\n\n  return (\n    <section className=\"container-pesquisa\">\n      <input\n        className=\"Pesquisa\"\n        type=\"text\"\n        value={pesquisa}\n        onChange={(event) => setPesquisa(event.target.value)}\n        placeholder=\"Pesquisa\"\n      />\n      <button className=\"btn\" onClick={() => filterData(pesquisa)}>\n        Buscar\n      </button>\n    </section>\n  );\n};\n\nexport default Pesquisa;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './nav.css';\nimport Logo from '../../image/logo.png';\nimport Pesquisa from '../Pesquisa'\n\nfunction Nav({ filterData }) {\n  return (\n    <nav className=\"Menu\">\n      <ul>\n        <li>\n          <img className=\"logo\" src={Logo} />\n        </li>\n        <Pesquisa filterData={filterData} />\n        <div className=\"nav-links\">\n          <li><Link className='Link-css' to=\"/\" >Home</Link></li>\n          <li><Link className='Link-css' to=\"/\" >Destinos</Link></li>\n          <li><Link className='Link-css' to=\"/\" >Quem somos</Link></li>\n          <li><Link className='Link-css' to=\"/\" >Contato</Link></li>\n        </div>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\"\nimport \"./Footer.css\"\nimport { FaFacebook } from \"react-icons/fa\";\nimport { FaYoutube } from \"react-icons/fa\";\nimport { FaInstagram } from \"react-icons/fa\";\nimport { FaTwitter } from \"react-icons/fa\";\n\nfunction Footer() {\n    return (\n        <footer className=\"Footer\">\n            <p>Siga a gente nas redes sociais:</p>\n            <div className=\"footer_social\">\n                <a href=\"https://www.facebook.com\">\n                    <FaFacebook size=\"40\" color=\"#3b5998\" />\n                </a>\n                <a href=\"https://www.twitter.com\">\n                    <FaTwitter size=\"40\" color=\"#1da1f2\" />\n                </a>\n                <a href=\"https://www.youtube.com\">\n                    <FaYoutube size=\"40\" color=\"#f00f\" />\n                </a>\n                <a href=\"https://www.instagram.com\">\n                    <FaInstagram size=\"40\" color=\"#000\" />\n                </a>\n            </div>\n            <p>Digital House / Santander - Todos os direitos reservados - Logo Ali 2020</p>\n\n        </footer >)\n};\n\n\nexport default Footer;","import React from \"react\";\nimport './SideBar.css';\n\nconst Sidebar = (props) => {\n    const data = props.data;\n\n    return (\n        <nav className=\"sidebar\">\n            <h2>POSTAGENS</h2>\n            <ul className=\"posts-list\">\n                <ul className=\"month-list\">\n                    <div className=\"mes\"><p>Outubro</p></div>\n                    { \n                        data.map((destino) => {\n                            return <li>{destino.titulo}</li>;\n                        })\n                    }\n                </ul>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Sidebar;","import React from 'react'\nimport './card.css'\n\nconst Card = (data) => {\n    return(\n        <div className=\"card\">\n            <img id=\"imagem\" src={data.imagem} alt={data.titulo} />\n            <span id=\"titulo\" ><b>{data.titulo}</b></span>\n            <span id=\"descricao\" >{data.descricao}</span>\n            <span id=\"autor\">Autor(a): <i>{data.autor}</i></span>\n        </div>\n    )\n}\n\nexport default Card","import React, { useState } from \"react\";\nimport Nav from \"../../components/Nav\";\nimport Footer from \"../../components/Footer\";\nimport data from \"../../data.json\";\nimport Sidebar from \"../../components/SideBar\";\n\nimport Card from \"../../components/Card\";\n\nimport \"./Home.css\";\n\nfunction Home() {\n  const [posts, setPosts] = useState(data);\n\n  const filterData = (filter = \"\") => {\n    const filteredData = data.filter((post) =>\n      post.titulo.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    setPosts(filteredData);\n  };\n\n  return (\n    <main className=\"Home\">\n      <Nav filterData={filterData} />\n\n      <section className=\"cards-container\">\n        {posts.length != 0 ? (\n          posts.map((prop) => {\n            return (\n              <Card\n                key={prop.id}\n                imagem={prop.imagem}\n                titulo={prop.titulo}\n                descricao={prop.descricao}\n                autor={prop.autor}\n              />\n            );\n          })\n        ) : (\n          <b>Nenhum post encontrado!</b>\n        )}\n      </section>\n\n      <Sidebar data={data} />\n      <Footer />\n    </main>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./views/Home\";\n\nfunction Routes(){\n    return(\n        <BrowserRouter>\n            <Route path=\"/\" exact component={Home}/>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;","import React from \"react\";\nimport Routes from \"./routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}