{"version":3,"sources":["image/logo.png","components/Pesquisa/index.jsx","components/Nav/index.jsx","components/Footer/index.jsx","components/SideBar/index.jsx","components/Card/index.jsx","views/Home/index.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pesquisa","filterData","useState","pesquisa","setPesquisa","className","type","value","onChange","event","target","placeholder","onClick","Nav","src","Logo","to","Footer","href","size","color","Sidebar","props","data","map","destino","titulo","Card","id","imagem","alt","descricao","autor","Home","posts","setPosts","filter","filteredData","post","toLowerCase","includes","length","prop","key","Routes","basename","process","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.198807bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e4ef4d58.png\";","import React, { useState } from \"react\";\r\nimport \"./Pesquisa.css\";\r\n\r\nconst Pesquisa = ({ filterData }) => {\r\n  const [pesquisa, setPesquisa] = useState(\"\");\r\n\r\n  return (\r\n    <section className=\"container-pesquisa\">\r\n      <input\r\n        className=\"Pesquisa\"\r\n        type=\"text\"\r\n        value={pesquisa}\r\n        onChange={(event) => setPesquisa(event.target.value)}\r\n        placeholder=\"Pesquisa\"\r\n      />\r\n      <button className=\"btn\" onClick={() => filterData(pesquisa)}>\r\n        Buscar\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Pesquisa;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './nav.css';\r\nimport Logo from '../../image/logo.png';\r\nimport Pesquisa from '../Pesquisa'\r\n\r\nfunction Nav({ filterData }) {\r\n  return (\r\n    <nav className=\"Menu\">\r\n      <ul>\r\n        <li>\r\n          <img className=\"logo\" src={Logo} />\r\n        </li>\r\n        <Pesquisa filterData={filterData} />\r\n        <div className=\"nav-links\">\r\n          <li><Link className='Link-css' to=\"/\" >Home</Link></li>\r\n          <li><Link className='Link-css' to=\"/\" >Destinos</Link></li>\r\n          <li><Link className='Link-css' to=\"/\" >Quem somos</Link></li>\r\n          <li><Link className='Link-css' to=\"/\" >Contato</Link></li>\r\n        </div>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\"\r\nimport \"./Footer.css\"\r\nimport { FaFacebook } from \"react-icons/fa\";\r\nimport { FaYoutube } from \"react-icons/fa\";\r\nimport { FaInstagram } from \"react-icons/fa\";\r\nimport { FaTwitter } from \"react-icons/fa\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <p>Siga a gente nas redes sociais:</p>\r\n            <div className=\"footer_social\">\r\n                <a href=\"https://www.facebook.com\">\r\n                    <FaFacebook size=\"40\" color=\"#3b5998\" />\r\n                </a>\r\n                <a href=\"https://www.twitter.com\">\r\n                    <FaTwitter size=\"40\" color=\"#1da1f2\" />\r\n                </a>\r\n                <a href=\"https://www.youtube.com\">\r\n                    <FaYoutube size=\"40\" color=\"#f00f\" />\r\n                </a>\r\n                <a href=\"https://www.instagram.com\">\r\n                    <FaInstagram size=\"40\" color=\"#000\" />\r\n                </a>\r\n            </div>\r\n            <p>Digital House / Santander - Todos os direitos reservados - Logo Ali 2020</p>\r\n\r\n        </footer >)\r\n};\r\n\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport './SideBar.css';\r\n\r\nconst Sidebar = (props) => {\r\n    const data = props.data;\r\n\r\n    return (\r\n        <nav className=\"sidebar\">\r\n            <h2>POSTAGENS</h2>\r\n            <ul className=\"posts-list\">\r\n                <ul className=\"month-list\">\r\n                    <div className=\"mes\"><p>Outubro</p></div>\r\n                    { \r\n                        data.map((destino) => {\r\n                            return <li>{destino.titulo}</li>;\r\n                        })\r\n                    }\r\n                </ul>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react'\r\nimport './card.css'\r\n\r\nconst Card = (data) => {\r\n    return(\r\n        <div className=\"card\">\r\n            <img id=\"imagem\" src={data.imagem} alt={data.titulo} />\r\n            <span id=\"titulo\" ><b>{data.titulo}</b></span>\r\n            <span id=\"descricao\" >{data.descricao}</span>\r\n            <span id=\"autor\">Autor(a): <i>{data.autor}</i></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React, { useState } from \"react\";\r\nimport Nav from \"../../components/Nav\";\r\nimport Footer from \"../../components/Footer\";\r\nimport data from \"../../data.json\";\r\nimport Sidebar from \"../../components/SideBar\";\r\n\r\nimport Card from \"../../components/Card\";\r\n\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  const [posts, setPosts] = useState(data);\r\n\r\n  const filterData = (filter = \"\") => {\r\n    const filteredData = data.filter((post) =>\r\n      post.titulo.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n    setPosts(filteredData);\r\n  };\r\n\r\n  return (\r\n    <main className=\"Home\">\r\n      <Nav filterData={filterData} />\r\n\r\n      <section className=\"cards-container\">\r\n        {posts.length !== 0 ? (\r\n          posts.map((prop) => {\r\n            return (\r\n              <Card\r\n                key={prop.id}\r\n                imagem={prop.imagem}\r\n                titulo={prop.titulo}\r\n                descricao={prop.descricao}\r\n                autor={prop.autor}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <b>Nenhum post encontrado!</b>\r\n        )}\r\n      </section>\r\n\r\n      <Sidebar data={data} />\r\n      <Footer />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./views/Home\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Route path=\"/\" exact component={Home} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}